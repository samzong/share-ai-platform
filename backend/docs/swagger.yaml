basePath: /api/v1
definitions:
  api.ErrorResponse:
    properties:
      error:
        example: error message
        type: string
    type: object
  handlers.ListUsersResponse:
    properties:
      total:
        example: 100
        type: integer
      users:
        items:
          $ref: '#/definitions/services.UserResponse'
        type: array
    type: object
  handlers.UpdateUserRequest:
    properties:
      email:
        example: john@example.com
        type: string
      username:
        example: johndoe
        type: string
    type: object
  handlers.UpdateUserRoleRequest:
    properties:
      role:
        allOf:
        - $ref: '#/definitions/models.Role'
        enum:
        - user
        - admin
        example: admin
    type: object
  models.Role:
    enum:
    - user
    - admin
    type: string
    x-enum-varnames:
    - RoleUser
    - RoleAdmin
  services.CreateImageRequest:
    type: object
  services.ImageResponse:
    properties:
      author:
        type: string
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      is_starred:
        type: boolean
      name:
        type: string
      org_id:
        type: string
      providers:
        items:
          $ref: '#/definitions/services.ProviderResponse'
        type: array
      readme_path:
        type: string
      stars:
        type: integer
      tags:
        items:
          type: string
        type: array
      updated_at:
        type: string
    type: object
  services.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  services.ProviderResponse:
    properties:
      api_url:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  services.RegisterRequest:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
      username:
        minLength: 3
        type: string
    required:
    - email
    - password
    - username
    type: object
  services.UpdateImageRequest:
    type: object
  services.UserResponse:
    properties:
      avatar:
        type: string
      email:
        type: string
      id:
        type: string
      nickname:
        type: string
      role:
        $ref: '#/definitions/models.Role'
      token:
        type: string
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is the API server for Share AI Platform.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Share AI Platform API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user and return token
      parameters:
      - description: Login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/services.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/services.UserResponse'
        "400":
          description: error message
          schema:
            additionalProperties: true
            type: object
      summary: Login user
      tags:
      - auth
  /auth/logout:
    post:
      description: Invalidate user's token
      produces:
      - application/json
      responses:
        "200":
          description: 'message: Successfully logged out'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: error message
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Logout user
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user with username, email and password
      parameters:
      - description: Registration details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/services.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/services.UserResponse'
        "400":
          description: error message
          schema:
            additionalProperties: true
            type: object
      summary: Register a new user
      tags:
      - auth
  /favorites:
    get:
      consumes:
      - application/json
      description: 获取当前用户收藏的所有容器镜像列表
      produces:
      - application/json
      responses:
        "200":
          description: 'data: []ContainerImage'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: error message
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: 获取收藏的容器镜像列表
      tags:
      - container-images
  /images:
    get:
      consumes:
      - application/json
      description: 获取所有可用的容器镜像列表，支持分页和搜索，包含镜像名称、标签、描述等信息
      parameters:
      - description: 页码，默认 1
        in: query
        name: page
        type: integer
      - description: 每页数量，默认 10
        in: query
        name: page_size
        type: integer
      - description: 搜索关键词（镜像名称、描述）
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'data: []ContainerImage, total: int'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: error message
          schema:
            additionalProperties: true
            type: object
        "500":
          description: error message
          schema:
            additionalProperties: true
            type: object
      summary: 获取容器镜像列表
      tags:
      - container-images
    post:
      consumes:
      - application/json
      description: 创建一个新的容器镜像，包括镜像基本信息、配置参数等
      parameters:
      - description: 容器镜像信息（名称、描述、配置等）
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/services.CreateImageRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/services.ImageResponse'
        "400":
          description: error message
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: 创建容器镜像
      tags:
      - container-images
  /images/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定的容器镜像及其相关配置信息
      parameters:
      - description: 容器镜像 ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success message
          schema:
            additionalProperties: true
            type: object
        "400":
          description: error message
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: 删除容器镜像
      tags:
      - container-images
    get:
      consumes:
      - application/json
      description: 根据镜像 ID 获取容器镜像的详细信息，包括镜像配置、版本、使用说明等
      parameters:
      - description: 容器镜像 ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/services.ImageResponse'
        "404":
          description: error message
          schema:
            additionalProperties: true
            type: object
      summary: 获取容器镜像详情
      tags:
      - container-images
    put:
      consumes:
      - application/json
      description: 更新指定容器镜像的信息，包括基本信息、配置参数等
      parameters:
      - description: 容器镜像 ID
        in: path
        name: id
        required: true
        type: string
      - description: 更新的镜像信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/services.UpdateImageRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/services.ImageResponse'
        "400":
          description: error message
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: 更新容器镜像信息
      tags:
      - container-images
  /images/{id}/collect:
    delete:
      consumes:
      - application/json
      description: 将指定的容器镜像从个人收藏夹中移除
      parameters:
      - description: 容器镜像 ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success message
          schema:
            additionalProperties: true
            type: object
        "400":
          description: error message
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: 取消收藏容器镜像
      tags:
      - container-images
    post:
      consumes:
      - application/json
      description: 将指定的容器镜像添加到个人收藏夹中
      parameters:
      - description: 容器镜像 ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success message
          schema:
            additionalProperties: true
            type: object
        "400":
          description: error message
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: 收藏容器镜像
      tags:
      - container-images
  /users:
    get:
      description: Get paginated list of users (admin only)
      parameters:
      - description: Page number
        in: query
        minimum: 1
        name: page
        required: true
        type: integer
      - description: Page size
        in: query
        maximum: 100
        minimum: 1
        name: page_size
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.ListUsersResponse'
        "400":
          description: error message
          schema:
            additionalProperties: true
            type: object
        "403":
          description: error message
          schema:
            additionalProperties: true
            type: object
        "500":
          description: error message
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: List users
      tags:
      - users
  /users/{id}:
    put:
      consumes:
      - application/json
      description: Update user's username and email
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Update user request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/services.UserResponse'
        "400":
          description: error message
          schema:
            additionalProperties: true
            type: object
        "500":
          description: error message
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update user
      tags:
      - users
  /users/{id}/role:
    put:
      consumes:
      - application/json
      description: Update user's role (admin only)
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Update role request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateUserRoleRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: error message
          schema:
            additionalProperties: true
            type: object
        "403":
          description: error message
          schema:
            additionalProperties: true
            type: object
        "500":
          description: error message
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update user role
      tags:
      - users
  /users/profile:
    get:
      description: Get current user's profile information
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/services.UserResponse'
        "500":
          description: error message
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get user profile
      tags:
      - users
    put:
      consumes:
      - multipart/form-data
      description: Update current user's profile information
      parameters:
      - description: User nickname
        in: formData
        name: nickname
        type: string
      - description: User avatar
        in: formData
        name: avatar
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/services.UserResponse'
        "400":
          description: error message
          schema:
            additionalProperties: true
            type: object
        "500":
          description: error message
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update user profile
      tags:
      - users
schemes:
- http
- https
securityDefinitions:
  Bearer:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
